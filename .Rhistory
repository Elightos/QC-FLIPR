q()
?list.files
old <- list.files(Y:/OneDrive/PhD)
old <- list.files("Y:/OneDrive/PhD")
old <- list.files("Y:/OneDrive/PhD", recursive = TRUE)
new <- list.files("Y:/Onedrive_LUMC/PhD", recursive = TRUE)
any(odl == new)
any(old == new)
#setwd("D:/OneDrive - LUMC/PhD/Calcium/20201015_Calcium_Hamamatsu_EXP02")
setwd("y:/Onedrive_LUMC/PhD/Calcium/20201215_Calcium_combined")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggsci)
library(cowplot)
theme_set(theme_cowplot())
theme_temp <- theme_cowplot()
theme_temp <- theme_update(panel.grid.major = element_line(color = "gray90", size = 1),
panel.grid.minor = element_line(color = "gray90", size = 0.5))
#setwd("D:/OneDrive - LUMC/PhD/Calcium/20201015_Calcium_Hamamatsu_EXP02")
setwd("Z:/Onedrive_LUMC/PhD/Calcium/20201215_Calcium_combined")
dir.create("Graphs", showWarnings = FALSE)
source("../temp_find_peaks.R")
seqplot <- function(x,z,a,b, y){
plot <- ggplot(data = z %>% filter(Well == x, between(Time, a, b)),
aes_string(x = "Time", y = y, fill = "Line", shape = "Condition")) +
geom_point(size = 1, colour = "black") +
geom_line(size = 0.50, colour = "black") +
labs(title = paste("Calcium waves from Well", x))
plot(plot)
}
seqplotp <- function(x,y,z,a,b, e){ ##special plot
plot <- ggplot(data = z %>% filter(Well == x, exp == e, between(Time, a, b)), aes_string(x = "Time", y = paste(y), colour = "Well", fill = "Line", shape = "exp")) +
geom_point(size = 1.25, colour = "black") +
geom_line(size = 0.80, colour = "black") +
geom_point(data = pks %>% filter(Well == x, exp == e, between(Time, a, b)),
aes_string(x = "Time", y = paste(y), colour = "shape"), size = 3)+
#geom_hline(yintercept = h, colour = "blue")+
labs(title = paste("Calcium waves from Well", x))
plot(plot)
#ggsave(paste0("D:/OneDrive/PhD/Calcium/190822_calcium_caff2/Graphs/",y,x,".tiff"))
}
load("../20201015_Calcium_Hamamatsu_EXP02/Calcium_calc_baseline.Rdata")
load("../20201015_Calcium_Hamamatsu_EXP02/Calcium_calc_baseline.Rdata")
comb <- dat %>% mutate(exp  = "201015_exp2")
comb <- dat %>% mutate(exp  = "201015_exp2")
load("../20201106_Analysis EXP03/Calcium_calc_baseline.Rdata")
comb <- bind_rows(comb, dat %>% mutate(exp  = "201106_exp3"))
comb <- bind_rows(comb, dat %>% mutate(exp  = "201106_exp3"))
load("../20201111_Analysis_exp04/Calcium_calc_baseline.Rdata")
load("../20201106_Analysis EXP03/Calcium_calc_baseline.Rdata")
comb <- bind_rows(comb, dat %>% mutate(exp  = "201106_exp3"))
load("../20201111_Analysis_exp04/Calcium_calc_baseline.Rdata")
comb <- bind_rows(comb, dat %>% mutate(exp  = "201111_exp4"))
load("../20201125_Analysis_EXP05/Calcium_calc_baseline.Rdata")
comb <- bind_rows(comb, dat %>% mutate(exp  = "201125_exp5"))
comb <- bind_rows(comb, dat %>% mutate(exp  = "201111_exp4"))
load("../20201125_Analysis_EXP05/Calcium_calc_baseline.Rdata")
comb <- bind_rows(comb, dat %>% mutate(exp  = "201125_exp5"))
comb <- comb %>% filter(Time < 120000) %>% group_by(Well, exp) %>% arrange(OD) %>% mutate(F_FO = (OD - min(OD))/mean(head(OD,1000))) %>%
arrange(Well, exp, Time)
head(comb)
pks <- find_peaks(comb, "F_FO", 30, 30, 0.8, TRUE)
head(comb)
head(comb)
to <- 0
#Peaks <- full_join(Peaks,  ## filters out peaks that are to low in amplitude, such as start of period
#                   Peaks %>% group_by(Line, Well) %>% summarise(mean = mean(OD), sd = sd(OD)) %>%
#                     mutate(msd = mean - 5 * sd) %>% select(-mean, -sd)) %>%
#  group_by(Well) %>% filter(OD > msd) %>% select(-msd)
#Peaks <- Peaks %>% filter(!(shape == "max" & F_FO < 6000)) %>% filter(!shape == lag(shape, default = first(shape), order_by = Time))
#sapply(unique(comb$Well), seqplotp, "F_FO", comb, to, to + 120000)
Peaks <- pks %>% filter(shape == "max") %>% group_by(Line, Well, exp) %>% arrange(Well, exp, Line, Time) %>%
mutate(RR = Time - lag(Time, default = NA), RRn = lead(Time, default = NA) - Time)
Peaks <- Peaks %>% ungroup() %>% mutate(Rhythm = ifelse(RR > RRn*1.1, 0,
ifelse(RR < RRn*0.9, 0, 1)), RRnmin = RRn*0.9, RRnmax = 1.1*RRn)
glimpse(Peaks)
Poinc <- function(z,p){
xloc <- min(Peaks %>% filter(Line == z, Rhythm %in% p) %>% pull(RR), na.rm = TRUE)
yloc <- max(Peaks %>% filter(Line == z, Rhythm %in% p) %>% pull(RRn), na.rm = TRUE)
fit <- lm(RRn~RR, Peaks %>% filter(Line == z, Rhythm %in% p))
plot <- ggplot(Peaks %>% filter(Line == z, Rhythm %in% p), aes(x = RR, y = RRn))+
geom_point(alpha=0.2, size = 2)+
#geom_smooth(method = "lm", formula = y~x)+
labs(title = paste("Poincar√© plot for line",z))+
#geom_text(aes(1.25*xloc, 0.9*yloc,
#              label = paste("Adj R2 = ", signif(summary(fit)$adj.r.squared, 5), "\n",
#                            "Intercept =",signif(fit$coef[[1]],5 ), "\n",
#                            "Slope =", signif(fit$coef[[2]], 5), "\n",
#                            "P =", signif(summary(fit)$coef[2,4], 5))),
#          size = 5)+
geom_abline(slope =1, size = 1 )+
lims(x = c(0,25000), y = c(0,25000))
plot(plot)
}
sapply(unique(Peaks$Line), Poinc, c(0,1))
head(comb)
head(pks)
head(pks)
head(Peaks)
#Peaks <- Peaks %>% filter(RR <5000 , RRn < 5000) %>% unite("Filename", c(Well,Line,exp), remove = FALSE)
#comb <- comb %>% unite("Filename", c(Well,Line,exp), remove = FALSE) %>% filter(Filename %in% Peaks$Filename)
#pks <- Peaks
#sapply("H11", seqplotp, "F_FO", comb %>% filter(exp == "201106_exp3"), to, to + 120000)
sapply(unique(comb$Well), seqplotp, "F_FO", comb, to, to + 120000, unique(comb$exp)[1])
dat <- data.frame(Targeted sequence = c("CAAGGtGTGGGGgTgGTGAG", "CAAGGCGTGGGGtTCcaGAG", "CAgGGCGgGGGGCTCcTGAG", "CAgtGCGTGGGGCTCGTGcG", "CAAGGCGTGGGGtTCGgGgG"),
SNPs = c("2/4/2/4", "0/0/0/0", "0/0/0/0", "0/0/0/0", "0/0/0/0", "0/0/2/2"),
Primers = c("CACTCCTCAAGTGCTAAAGT/GATTAAGTGAGCAGACCTGT", "ATTAGTAACGCTGTTTCCCC/GCTGCACATAAGTCATGGTA", "TGAAATCCCACCTATCTCCT/GCAGAAAACACTTTTTCCCA",
"ACCATATGCACATCCACATT/CTATTTTGGACCAGAAGCCT", "TAGGCCTAGACCTTTCTCTC/TCTTCCTAATCTTCACCCCA"))
dat <- data.frame("Targeted sequence" = c("CAAGGtGTGGGGgTgGTGAG", "CAAGGCGTGGGGtTCcaGAG", "CAgGGCGgGGGGCTCcTGAG", "CAgtGCGTGGGGCTCGTGcG", "CAAGGCGTGGGGtTCGgGgG"),
"SNPs" = c("2/4/2/4", "0/0/0/0", "0/0/0/0", "0/0/0/0", "0/0/0/0", "0/0/2/2"),
"Primers" = c("CACTCCTCAAGTGCTAAAGT/GATTAAGTGAGCAGACCTGT", "ATTAGTAACGCTGTTTCCCC/GCTGCACATAAGTCATGGTA", "TGAAATCCCACCTATCTCCT/GCAGAAAACACTTTTTCCCA",
"ACCATATGCACATCCACATT/CTATTTTGGACCAGAAGCCT", "TAGGCCTAGACCTTTCTCTC/TCTTCCTAATCTTCACCCCA"))
dat <- data.frame("Targeted sequence" = c("CAAGGtGTGGGGgTgGTGAG", "CAAGGCGTGGGGtTCcaGAG", "CAgGGCGgGGGGCTCcTGAG", "CAgtGCGTGGGGCTCGTGcG", "CAAGGCGTGGGGtTCGgGgG"),
"SNPs" = c("2/4/2/4", "0/0/0/0", "0/0/0/0", "0/0/0/0", "0/0/0/0", "0/0/2/2"),
"Primers" = c("TTGAGGGTACCTTGAGTGGA/TAGCCCATGTCTCCTTGTGT" , "CACTCCTCAAGTGCTAAAGT/GATTAAGTGAGCAGACCTGT",
"ATTAGTAACGCTGTTTCCCC/GCTGCACATAAGTCATGGTA", "TGAAATCCCACCTATCTCCT/GCAGAAAACACTTTTTCCCA",
"ACCATATGCACATCCACATT/CTATTTTGGACCAGAAGCCT", "TAGGCCTAGACCTTTCTCTC/TCTTCCTAATCTTCACCCCA"))
dat <- data.frame("Targeted sequence" = c("CAAGGCGTGGGGCTCGTGAG", "CAAGGtGTGGGGgTgGTGAG", "CAAGGCGTGGGGtTCcaGAG",
"CAgGGCGgGGGGCTCcTGAG", "CAgtGCGTGGGGCTCGTGcG", "CAAGGCGTGGGGtTCGgGgG"),
"SNPs" = c("2/4/2/4", "0/0/0/0", "0/0/0/0", "0/0/0/0", "0/0/0/0", "0/0/2/2"),
"Primers" = c("TTGAGGGTACCTTGAGTGGA/TAGCCCATGTCTCCTTGTGT" , "CACTCCTCAAGTGCTAAAGT/GATTAAGTGAGCAGACCTGT",
"ATTAGTAACGCTGTTTCCCC/GCTGCACATAAGTCATGGTA", "TGAAATCCCACCTATCTCCT/GCAGAAAACACTTTTTCCCA",
"ACCATATGCACATCCACATT/CTATTTTGGACCAGAAGCCT", "TAGGCCTAGACCTTTCTCTC/TCTTCCTAATCTTCACCCCA"))
dat
library(kableExtra)
?kable
kable(dat, format = "latex")
kable(dat)
remotes::install_github('yihui/tinytex')
update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::tlmgr_update()
kable(dat, format = "latex", booktabs = T)
dat
library(tidyverse)
kable(dat, format = "latex", booktabs = T) %>% kable_styling(latex_options = "striped")
kable(dat, format = "latex", booktabs = T)
library(tidyverse)
library(kableExtra)
kable(dat, format = "latex", booktabs = T) %>% kable_styling(latex_options = "striped")
kable(dat, format = "latex", booktabs = T, "linesep = "") %>% kable_styling(latex_options = "striped")
kable(dat, format = "latex", booktabs = T, linesep = "") %>% kable_styling(latex_options = "striped")
make.names(dat)
make.names("targeted sequence")
dat <-tbl_df("Targeted sequence" = c("CAAGGCGTGGGGCTCGTGAG", "CAAGGtGTGGGGgTgGTGAG", "CAAGGCGTGGGGtTCcaGAG",
"CAgGGCGgGGGGCTCcTGAG", "CAgtGCGTGGGGCTCGTGcG", "CAAGGCGTGGGGtTCGgGgG"),
"SNPs" = c("2/4/2/4", "0/0/0/0", "0/0/0/0", "0/0/0/0", "0/0/0/0", "0/0/2/2"),
"Primers" = c("TTGAGGGTACCTTGAGTGGA/TAGCCCATGTCTCCTTGTGT" , "CACTCCTCAAGTGCTAAAGT/GATTAAGTGAGCAGACCTGT",
"ATTAGTAACGCTGTTTCCCC/GCTGCACATAAGTCATGGTA", "TGAAATCCCACCTATCTCCT/GCAGAAAACACTTTTTCCCA",
"ACCATATGCACATCCACATT/CTATTTTGGACCAGAAGCCT", "TAGGCCTAGACCTTTCTCTC/TCTTCCTAATCTTCACCCCA"))
?tbl_df
dat <-as_tibble("Targeted sequence" = c("CAAGGCGTGGGGCTCGTGAG", "CAAGGtGTGGGGgTgGTGAG", "CAAGGCGTGGGGtTCcaGAG",
"CAgGGCGgGGGGCTCcTGAG", "CAgtGCGTGGGGCTCGTGcG", "CAAGGCGTGGGGtTCGgGgG"),
"SNPs" = c("2/4/2/4", "0/0/0/0", "0/0/0/0", "0/0/0/0", "0/0/0/0", "0/0/2/2"),
"Primers" = c("TTGAGGGTACCTTGAGTGGA/TAGCCCATGTCTCCTTGTGT" , "CACTCCTCAAGTGCTAAAGT/GATTAAGTGAGCAGACCTGT",
"ATTAGTAACGCTGTTTCCCC/GCTGCACATAAGTCATGGTA", "TGAAATCCCACCTATCTCCT/GCAGAAAACACTTTTTCCCA",
"ACCATATGCACATCCACATT/CTATTTTGGACCAGAAGCCT", "TAGGCCTAGACCTTTCTCTC/TCTTCCTAATCTTCACCCCA"))
dat <- tibble("Targeted sequence" = c("CAAGGCGTGGGGCTCGTGAG", "CAAGGtGTGGGGgTgGTGAG", "CAAGGCGTGGGGtTCcaGAG",
"CAgGGCGgGGGGCTCcTGAG", "CAgtGCGTGGGGCTCGTGcG", "CAAGGCGTGGGGtTCGgGgG"),
"SNPs" = c("2/4/2/4", "0/0/0/0", "0/0/0/0", "0/0/0/0", "0/0/0/0", "0/0/2/2"),
"Primers" = c("TTGAGGGTACCTTGAGTGGA/TAGCCCATGTCTCCTTGTGT" , "CACTCCTCAAGTGCTAAAGT/GATTAAGTGAGCAGACCTGT",
"ATTAGTAACGCTGTTTCCCC/GCTGCACATAAGTCATGGTA", "TGAAATCCCACCTATCTCCT/GCAGAAAACACTTTTTCCCA",
"ACCATATGCACATCCACATT/CTATTTTGGACCAGAAGCCT", "TAGGCCTAGACCTTTCTCTC/TCTTCCTAATCTTCACCCCA"))
dat
kable(dat, format = "latex", booktabs = T, linesep = "") %>% kable_styling(latex_options = "striped")
install.packages(rlang)
install.packages("rlang")
install.packages("rlang")
user_renviron = path.expand(file.path("~", ".Renviron"))
user_renviron
file.edit(user_renviron)
getwd()
user_renviron = path.expand(file.path("~", ".Renviron"))
file.edit(user_renviron) # open with another text editor if this fails
> Sys.getlocale()
Sys.getlocale()
path.expand(file.path("~", ".Renviron"))
?Sys.setlocale()
file.path(Sys.getenv("HOME"), ".Rprofile")
log(10)
log(2.14)
log(3.14)
?log
e^3.26
exp(3.26)
exp(4.25)
exp(15.15)
Sys.getenv
Sys.getenv()
library(ggplot2)
.libpaths
.libpaths()
.libPaths()
getwd()
setwd("E:/OneDrive - HeartBeat.bio AG/Custom R work/Flipr pre QC")
library(tidyverse)
library(cowplot)
list.files()
list.files(recursive = TRUE, pattern = "xls")
tibble(Loc = list.files(recursive = TRUE, pattern = "xls"))
tibble(Loc = list.files(recursive = TRUE, pattern = "xls")) %>%
separate(Loc, into = c("x", "y", "File"), remove = FALSE)
tibble(Loc = list.files(recursive = TRUE, pattern = "xls")) %>%
separate(Loc, into = c("x", "y", "File"), remove = FALSE, sep = "/")
tibble(Loc = list.files(recursive = TRUE, pattern = "xls")) %>%
separate(Loc, into = c("x", "y", "File"), remove = FALSE, sep = "/") %>%
select(-x,-y) %>%
separate(File, into = c("Date", "Exp", "Line", "Passage", "Day", "DP", "Time", "x", "y"), sep = "_")
tibble(Loc = list.files(recursive = TRUE, pattern = "xls")) %>%
separate(Loc, into = c("x", "y", "File"), remove = FALSE, sep = "/") %>%
select(-x,-y) %>%
separate(File, into = c("Date", "Exp", "Line", "Passage", "Day", "DP", "Time", "x", "y"), sep = "_") %>% View
tibble(Loc = list.files(recursive = TRUE, pattern = "xls")) %>%
separate(Loc, into = c("x", "y", "File"), remove = FALSE, sep = "/") %>%
select(-x,-y) %>%
separate(File, into = c("Date", "Exp", "Line", "Passage", "Day", "DP", "Time", "z", "w"), sep = "_") %>%
select(-x, -y, -z , -w)
tibble(Loc = list.files(recursive = TRUE, pattern = "xls")) %>%
separate(Loc, into = c("x", "y", "File"), remove = FALSE, sep = "/") %>%
separate(File, into = c("Date", "Exp", "Line", "Passage", "Day", "DP", "Time", "z", "w"), sep = "_") %>%
select(-x, -y, -z , -w)
files <- tibble(Loc = list.files(recursive = TRUE, pattern = "xls")) %>%
separate(Loc, into = c("x", "y", "File"), remove = FALSE, sep = "/") %>%
separate(File, into = c("Date", "Exp", "Line", "Passage", "Day", "DP", "Time", "z", "w"), sep = "_") %>%
select(-x, -y, -z , -w)
install.packages("readxl")
install.packages("readxl")
knitr::opts_chunk$set(echo = TRUE)
setwd("E:/OneDrive - HeartBeat.bio AG/Custom R work/Flipr pre QC")
library(tidyverse)
library(cowplot)
library(readxl)
do.call_rbind <- function(fl) {
do.call(rbind, lapply(fl, function(x) read_xlsx(x) %>% mutate(file = x)))
}
files
files <- tibble(Loc = list.files(recursive = TRUE, pattern = "xls")) %>%
separate(Loc, into = c("x", "y", "File"), remove = FALSE, sep = "/") %>%
separate(File, into = c("Date", "Exp", "Line", "Passage", "Day", "DP", "Time", "z", "w"), sep = "_") %>%
select(-x, -y, -z , -w)
do.call_rbind <- function(fl) {
do.call(rbind, lapply(fl, function(x) read_xlsx(x) %>% mutate(file = x)))
}
df <- do.call_rbind(files %>% pull(Loc)) #%>%
do.call_rbind <- function(fl) {
do.call(rbind, lapply(fl, function(x) read_xls(x) %>% mutate(file = x)))
}
df <- do.call_rbind(files %>% pull(Loc)) #%>%
files[1,1]
df <- do.call_rbind(files[1,1] )#%>% pull(Loc)) #%>%
df
?read_xls
do.call_rbind <- function(fl) {
do.call(rbind, lapply(fl, function(x) read_xls(x, sheet = 2) %>% mutate(file = x)))
}
df <- do.call_rbind(files[1,1] )#%>% pull(Loc)) #%>%
df
df <- do.call_rbind(files%>% pull(Loc)) #%>%
head(df)
do.call_rbind <- function(fl) {
do.call(rbind, lapply(fl, function(x) read_xls(x, sheet = 2) %>% mutate(Loc = x)))
}
df <- do.call_rbind(files%>% pull(Loc)) %>%
left_join(files, by = "Loc")
head(df)
files <- tibble(Loc = list.files(recursive = TRUE, pattern = "xls")) %>%
separate(Loc, into = c("x", "y", "File"), remove = FALSE, sep = "/") %>%
separate(File, into = c("Date", "Exp", "Line", "Passage", "Day", "DP", "Time", "z", "w"), sep = "_") %>%
select(-x, -y, -z , -w) %>%
filter(Time == "n001")
files <- tibble(Loc = list.files(recursive = TRUE, pattern = "xls")) %>%
separate(Loc, into = c("x", "y", "File"), remove = FALSE, sep = "/") %>%
separate(File, into = c("Date", "Exp", "Line", "Passage", "Day", "DP", "Time", "z", "w"), sep = "_") %>%
filter(Time == "n001") %>%
select(-x, -y, -z , -w, -Time)
do.call_rbind <- function(fl) {
do.call(rbind, lapply(fl, function(x) read_xls(x, sheet = 2) %>% mutate(Loc = x)))
}
df <- do.call_rbind(files%>% pull(Loc)) %>%
left_join(files, by = "Loc")
df
df <- do.call_rbind(files%>% pull(Loc)) %>%
left_join(files, by = "Loc") %>%
mutate(Time = as.double(substring(Day, 2)))
df
library(knitr)
knitr(df)
kable(df)
kable(head(df,10))
is.na(df)
any(is.na(df))
head(df)
seqplot <- function(x){
plot <- ggplot(df, aes(x = Time, y = .data[[x]], fill = Plate))+
#geom_jitter(width = 0.1, size = 0.25, alpha = 0.75)+
#geom_violin(aes(Group = cut_width(Time, 1)), scale = "width", width = 0.5)+
stat_summary(fun = mean, geom = "line", aes(linetype = DP))
plot(plot)
}
df
nam <- names(df)[2:6,8]
nam <- names(df)[c(2:6,8)]
nam
sapply(nam[1], seqplot)
seqplot <- function(x){
plot <- ggplot(df, aes(x = Time, y = .data[[x]], fill = Line))+
#geom_jitter(width = 0.1, size = 0.25, alpha = 0.75)+
#geom_violin(aes(Group = cut_width(Time, 1)), scale = "width", width = 0.5)+
stat_summary(fun = mean, geom = "line", aes(linetype = DP))
plot(plot)
}
sapply(nam[1], seqplot)
df
files <- tibble(Loc = list.files(recursive = TRUE, pattern = "xls")) %>%
separate(Loc, into = c("x", "y", "File"), remove = FALSE, sep = "/") %>%
separate(File, into = c("Date", "Exp", "Line", "Passage", "Day", "DP", "Time", "z", "w"), sep = "_") %>%
filter(Time == "n001") %>%
select(-x, -y, -z , -w, -Time)
do.call_rbind <- function(fl) {
do.call(rbind, lapply(fl, function(x) read_xls(x, sheet = 2) %>% mutate(Loc = x)))
}
df <- do.call_rbind(files%>% pull(Loc)) %>%
left_join(files, by = "Loc") %>%
mutate(Time = as.double(substring(Day, 2)))
glimpse(df)
?read_xls
do.call_rbind <- function(fl) {
do.call(rbind, lapply(fl, function(x) read_xls(x, sheet = 2,
col_types = c("text", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", )) %>%
mutate(Loc = x)))
}
df <- do.call_rbind(files%>% pull(Loc)) %>%
left_join(files, by = "Loc") %>%
mutate(Time = as.double(substring(Day, 2)))
head9df
head(df)
do.call_rbind <- function(fl) {
do.call(rbind, lapply(fl, function(x) read_xls(x, sheet = 2,
col_types = c("text", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric")) %>%
mutate(Loc = x)))
}
df <- do.call_rbind(files%>% pull(Loc)) %>%
left_join(files, by = "Loc") %>%
mutate(Time = as.double(substring(Day, 2)))
warnings()
kable(head(df,10))
seqplot <- function(x){
plot <- ggplot(df, aes(x = Time, y = .data[[x]], fill = Line))+
#geom_jitter(width = 0.1, size = 0.25, alpha = 0.75)+
#geom_violin(aes(Group = cut_width(Time, 1)), scale = "width", width = 0.5)+
stat_summary(fun = mean, geom = "line", aes(linetype = DP))
plot(plot)
}
nam <- names(df)[c(2:6,8)]
sapply(nam[1], seqplot)
df %>% group_by(Line) %>% count()
plot <- ggplot(df, aes(x = Time, y = .data[[x]], fill = Line))+
#geom_jitter(width = 0.1, size = 0.25, alpha = 0.75)+
#geom_violin(aes(Group = cut_width(Time, 1)), scale = "width", width = 0.5)+
stat_summary(fun = mean, geom = "line", aes(linetype = DP, fill = Line))
seqplot <- function(x){
plot <- ggplot(df, aes(x = Time, y = .data[[x]], fill = Line))+
#geom_jitter(width = 0.1, size = 0.25, alpha = 0.75)+
#geom_violin(aes(Group = cut_width(Time, 1)), scale = "width", width = 0.5)+
stat_summary(fun = mean, geom = "line", aes(linetype = DP, fill = Line))
plot(plot)
}
sapply(nam[1], seqplot)
seqplot <- function(x){
plot <- ggplot(df, aes(x = Time, y = .data[[x]], fill = Line))+
#geom_jitter(width = 0.1, size = 0.25, alpha = 0.75)+
#geom_violin(aes(Group = cut_width(Time, 1)), scale = "width", width = 0.5)+
stat_summary(fun = mean, geom = "line")
plot(plot)
}
sapply(nam[1], seqplot)
seqplot <- function(x){
seqplot <- function(x){
plot <- ggplot(df, aes(x = Time, y = .data[[x]], colour = Line))+
#geom_jitter(width = 0.1, size = 0.25, alpha = 0.75)+
#geom_violin(aes(Group = cut_width(Time, 1)), scale = "width", width = 0.5)+
stat_summary(fun = mean, geom = "line", aes(linetype = DP))  plot(plot)
seqplot <- function(x){
plot <- ggplot(df, aes(x = Time, y = .data[[x]], colour = Line))+
#geom_jitter(width = 0.1, size = 0.25, alpha = 0.75)+
#geom_violin(aes(Group = cut_width(Time, 1)), scale = "width", width = 0.5)+
stat_summary(fun = mean, geom = "line", aes(linetype = DP))
plot(plot)
}
sapply(nam[1], seqplot)
seqplot <- function(x){
plot <- ggplot(df, aes(x = Time, y = .data[[x]], colour = Line))+
#geom_jitter(width = 0.1, size = 0.25, alpha = 0.75)+
#geom_violin(aes(Group = cut_width(Time, 1)), scale = "width", width = 0.5)+
stat_summary(fun = mean, geom = "line", aes(linetype = DP))+
stat_summary(fun.data = mean_se, geom = "errorbar")
plot(plot)
}
sapply(nam[1], seqplot)
seqplot <- function(x){
plot <- ggplot(df, aes(x = Time, y = .data[[x]], colour = Line, fill = DP))+
#geom_jitter(width = 0.1, size = 0.25, alpha = 0.75)+
#geom_violin(aes(Group = cut_width(Time, 1)), scale = "width", width = 0.5)+
stat_summary(fun = mean, geom = "line", aes(linetype = DP))+
stat_summary(fun.data = mean_se, geom = "errorbar")
plot(plot)
}
sapply(nam[1], seqplot)
seqplot <- function(x){
plot <- ggplot(df, aes(x = Time, y = .data[[x]], colour = Line, fill = DP))+
#geom_jitter(width = 0.1, size = 0.25, alpha = 0.75)+
#geom_violin(aes(Group = cut_width(Time, 1)), scale = "width", width = 0.5)+
stat_summary(fun = mean, geom = "line", aes(linetype = DP))+
stat_summary(fun.data = mean_se, geom = "errorbar")+
labs(x = "Time (days)")
theme_cowplot()+
background_grid()
plot(plot)
}
nam <- names(df)[c(2:6,8)]
sapply(nam[1], seqplot)
seqplot <- function(x){
plot <- ggplot(df, aes(x = Time, y = .data[[x]], colour = Line, fill = DP))+
#geom_jitter(width = 0.1, size = 0.25, alpha = 0.75)+
#geom_violin(aes(Group = cut_width(Time, 1)), scale = "width", width = 0.5)+
stat_summary(fun = mean, geom = "line", aes(linetype = DP))+
stat_summary(fun.data = mean_se, geom = "errorbar")+
labs(x = "Time (days)")+
theme_cowplot()+
background_grid()
plot(plot)
}
nam <- names(df)[c(2:6,8)]
sapply(nam[1], seqplot)
do.call_rbind <- function(fl) {
do.call(rbind, lapply(fl, function(x) suppressWarnings(read_xls(x, sheet = 2,
col_types = c("text", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric"))) %>%
mutate(Loc = x)))
}
df <- do.call_rbind(files%>% pull(Loc)) %>%
left_join(files, by = "Loc") %>%
mutate(Time = as.double(substring(Day, 2)))
df
